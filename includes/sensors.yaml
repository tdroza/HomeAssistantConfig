- platform: template
  sensors:
    daytime:
      friendly_name: 'Daytime'
      value_template: '{% if is_state("sun.sun","above_horizon") %}1{% else %}0{% endif %}}'
      icon_template: '{% if is_state("sun.sun","above_horizon") %}mdi:weather-sunny{% else %}mdi:weather-night{% endif %}}'
    central_heating:
      friendly_name: 'Central heating'
      value_template: '{% if is_state_attr("climate.nest_thermostat", "hvac_action", "heating") %}1{% else %}0{% endif %}'
      icon_template: '{% if is_state_attr("climate.nest_thermostat", "hvac_action", "heating") %}mdi:fire1{% else %}mdi:clock-outline{% endif %}'
    broadband_mb_received: 
      value_template: '{{ states(''sensor.bt_home_hub_6_0a_b_received'') | filesizeformat() }}'
    weather_condition:
      value_template: '{{ states.weather.millview.state }}'
    weather_temperature:
      value_template: '{{ states.weather.millview.attributes.temperature }}'
    weather_humidity:
      value_template: '{{ states.weather.millview.attributes.humidity }}'
    weather_windspeed:
      value_template: '{{ states.weather.millview.attributes.wind_speed }}'
    weather_windbearing:
      value_template: '{{ states.weather.millview.attributes.wind_bearing }}'
    coinbase_portfolio_balance:
      value_template: >
        {%- set btc = state_attr('sensor.coinbase_btc_wallet','Balance in native currency')[:-4] | float -%}
        {%- set eth = state_attr('sensor.coinbase_eth_wallet','Balance in native currency')[:-4] | float %}
        {%- set ltc = state_attr('sensor.coinbase_ltc_wallet','Balance in native currency')[:-4] | float %}
        {%- set xlm = state_attr('sensor.coinbase_xlm_wallet','Balance in native currency')[:-4] | float %}
        {%- set doge = state_attr('sensor.coinbase_doge_wallet','Balance in native currency')[:-4] | float %}
        {%- set sol = state_attr('sensor.coinbase_sol_wallet','Balance in native currency')[:-4] | float %}
        {{ btc + eth + ltc + xlm + doge + sol}}
    calendar_family_next_title: 
      value_template: '{{ states.calendar.family.attributes.message}}'
    calendar_family_next_start: 
      value_template: '{{ as_timestamp(states.calendar.family.attributes.start_time) | timestamp_custom("%A %H:%M") }}'
    youtube_music_artist:
      value_template: >
        {% if (state_attr("media_player.ytube_music_player", "media_artist")==None) %}
          {{""}}
        {% else %}
          {{state_attr("media_player.ytube_music_player", "media_artist") }}
        {% endif %}
    youtube_music_title:
      value_template: >
        {% if (state_attr("media_player.ytube_music_player", "media_title")==None) %}
          {{""}}
        {% else %}
          {{state_attr("media_player.ytube_music_player", "media_title") }}
        {% endif %}
    teams_status: 
      friendly_name: "Microsoft Teams status"
      value_template: "{{states('input_text.teams_status')}}"
      icon_template: "{{state_attr('input_text.teams_status','icon')}}"
      unique_id: sensor.teams_status
    teams_activity:
      friendly_name: "Microsoft Teams activity"
      value_template: "{{states('input_text.teams_activity')}}"
      unique_id: sensor.teams_activity  

    vacuum_state:
      value_template: 'Ditto: {{ states.vacuum.ditto.attributes.status }}'
    vacuum_last_run:
      value_template: '{{ as_timestamp(states.vacuum.ditto.attributes.clean_start) | timestamp_custom("%a, %d %b %Y %H:%M") }}'
    vacuum_last_qm:
      value_template: '{{ states.vacuum.ditto.attributes.clean_area | round(0) }} mÂ²'
    vacuum_battery:
      value_template: '{{ states.vacuum.ditto.attributes.battery_level }} %'
      icon_template: '{{ states.vacuum.ditto.attributes.battery_icon }}'
- platform: time_date
  display_options:
    - 'time'
    - 'date'
- platform: template
  sensors:
    hallway_motion_sensor_temperature_rounded:
      friendly_name: 'Hall Temp'
      value_template: '{{states.sensor.hue_motion_sensor_temperature.state |round(0, default=0)}}'
    bed1_temperature_rounded:
      friendly_name: 'Bed1 Temp'
      value_template: '{{states.sensor.bed1_temperature.state |round(0, default=0)}}'
    office_temperature_rounded:
      friendly_name: 'Bed 2 Temp'
      value_template: '{{states.sensor.office_climate_temperature.state |round(0, default=0)}}'
    seb_temperature_rounded:
      friendly_name: 'Seb Temp'
      value_template: '{{states.sensor.seb_d1_temperature.state |round(0, default=0)}}'
    reuben_temperature_rounded:
      friendly_name: 'Reuben Temp'
      value_template: '{{states.sensor.reu_d1_temperature.state |round(0, default=0)}}'
    bathroom_temperature_rounded:
      friendly_name: 'Bathroom Temp'
      value_template: '{{states.sensor.bathroom_climate_temperature.state |round(0, default=0)}}'
    ensuite_temperature_rounded:
      friendly_name: 'Ensuite Temp'
      value_template: '{{states.sensor.ensuite_climate_temperature.state |round(0, default=0)}}'
    nest_temperature_rounded:
      friendly_name: 'Living Room Temp'
      value_template: '{{states.sensor.nest_thermostat_temperature.state |round(0, default=0)}}'
    air_quality_temperature_rounded:
      friendly_name: 'Air Quality Temp'
      value_template: '{{states.sensor.air_quality_temperature.state |round(0, default=0)}}'
    kitchen_temperature_rounded:
      friendly_name: 'Kitchen temperature'
      value_template: '{{states.sensor.kitchen_climate_temperature.state |round(0, default=0)}}'
- platform: feedparser
  scan_interval: 43200
  name: podcast_finn_caspian
  feed_url: https://rss.art19.com/the-alien-adventures-of-finn-caspian
  inclusions: 
    - title
    - links
    - published
- platform: feedparser
  scan_interval: 43200
  name: podcast_but_why
  feed_url: https://podcasts.vpr.net/but-why
  inclusions: 
    - title
    - links
    - published
- platform: feedparser
  scan_interval: 43200
  name: podcast_story_pirates
  feed_url: https://feeds.megaphone.fm/storypirates
  inclusions: 
    - title
    - links
    - published
- platform: feedparser
  scan_interval: 43200
  name: podcast_sound_explorers
  feed_url: https://feeds.megaphone.fm/soundexplorers
  inclusions: 
    - title
    - links
    - published
- platform: feedparser
  scan_interval: 43200
  name: podcast_goodnight_stories
  feed_url: https://feeds.megaphone.fm/RGS8260109708
  inclusions: 
    - title
    - links
    - published
- platform: feedparser
  scan_interval: 43200
  name: podcast_marvellous_musical
  feed_url: https://rss.hosting.thisisdax.com/99ebc61a-7b26-4f76-b595-9e2020ad84ac
  inclusions: 
    - title
    - links
    - published
- platform: feedparser
  scan_interval: 43200
  name: podcast_peace_out
  feed_url: https://bedtime.fm/peaceout/feed
  inclusions: 
    - title
    - links
    - published
- platform: feedparser
  scan_interval: 43200
  name: QOTD
  feed_url: http://feeds.feedburner.com/theysaidso/qod/inspire
- platform: feedparser
  name: NASADAily
  feed_url: https://www.nasa.gov/rss/dyn/lg_image_of_the_day.rss
  scan_interval: 43200
  show_topn: 1  
- platform: feedparser
  name: BBC News
  feed_url: http://feeds.bbci.co.uk/news/rss.xml
  show_topn: 5
- platform: uk_transport
  scan_interval: 86400
  app_id: !secret uk_transport-app_id
  app_key: !secret uk_transport-app_key
  queries:
    - mode: train
      origin: SHY
      destination: LDS    
- platform: uk_transport
  scan_interval: 86400
  app_id: !secret uk_transport-app_id
  app_key: !secret uk_transport-app_key
  queries:
    - mode: train
      origin: LDS
      destination: SHY   
- platform: rest
  resource: https://complimentr.com/api
  method: GET
  name: compliment
  scan_interval: 3600
  value_template: '{{ value_json.compliment }}'
- platform: history_stats
  name: Quarantine meter Tom
  entity_id: person.tom
  state: "home"
  type: ratio
  duration:
    days: 7
  end: "{{ now() }}"
- platform: history_stats
  name: Quarantine meter Tom count left
  entity_id: person.tom
  state: "home"
  type: count
  duration:
    days: 7
  end: "{{ now() }}"
- platform: history_stats
  name: Quarantine meter Anna count left
  entity_id: person.anna
  state: "home"
  type: count
  duration:
    days: 7
  end: "{{ now() }}"
- platform: history_stats
  name: Quarantine meter Anna
  entity_id: person.anna
  state: "home"
  type: ratio
  duration:
    days: 7
  end: "{{ now() }}"
- platform: history_stats
  name: Washing Machine Count
  entity_id: binary_sensor.washer
  state: "on"
  type: count
  duration:
    days: 7
  end: "{{ now() }}"
 
# Sensors for the holiday mode lighting automation
# All sensors will have naming convention "sensor.replay_xxxxx"
- platform: history_stats
  name: "replay_living_room_lights"
  entity_id: light.living_room_lights
  state: "on"
  type: count
  start: >
    {{ as_timestamp(now()) - (7*86400) }}
  duration: 00:00:30
- platform: history_stats
  name: "replay_main_bedroom"
  entity_id: light.main_bedroom
  state: "on"
  type: count
  start: >
    {{ as_timestamp(now()) - (7*86400) }}
  duration: 00:00:30  
- platform: history_stats
  name: "replay_main_bedroom_bloom"
  entity_id: light.main_bedroom_bloom
  state: "on"
  type: count
  start: >
    {{ as_timestamp(now()) - (7*86400) }}
  duration: 00:00:30
- platform: history_stats
  name: "replay_reuben_ceiling"
  entity_id: light.reubens_ceiling
  state: "on"
  type: count
  start: >
    {{ as_timestamp(now()) - (7*86400) }}
  duration: 00:00:30  
- platform: history_stats
  name: "replay_hallway"
  entity_id: light.hallway
  state: "on"
  type: count
  start: >
    {{ as_timestamp(now()) - (7*86400) }}
  duration: 00:00:30  
- platform: history_stats
  name: "replay_sebs_ceiling"
  entity_id: light.sebs_ceiling
  state: "on"
  type: count
  start: >
    {{ as_timestamp(now()) - (7*86400) }}
  duration: 00:00:30  
    
# DO NOTHING HELPER
# Use this sensor as a dummy placeholder in the blueprint automation
- platform: template
  sensors:
    do_nothing:
      friendly_name: 'Do Nothing - Dummy Sensor'
      value_template: 'off'
- platform: template
  sensors:
    raingauge_tips:
      value_template: "{{ states('sensor.raingauge_tips_on') |int + states('sensor.raingauge_tips_off') | int  - 1}}"

# Rain Gauge
- platform: history_stats
  name: Raingauge tips on
  entity_id: binary_sensor.rain_gauge
  state: 'on'
  type: count
  start: '{{ now().replace(hour=0, minute=0, second=0) }}'
  end: '{{ now() }}'
- platform: history_stats
  name: Raingauge tips off
  entity_id: binary_sensor.rain_gauge
  state: 'off'
  type: count
  start: '{{ now().replace(hour=0, minute=0, second=0) }}'
  end: '{{ now() }}'  
- platform: template
  sensors:
      rainfall_today:
          friendly_name: Rainfall today
          unit_of_measurement: mm
          value_template: >-
            {% set count = states('sensor.raingauge_tips') | int %}
            {% set mm_per_pulse = 1.25 %}
            {% set mm = count * mm_per_pulse %}
            {{ mm|round(1, 'floor') }}
- platform: min_max
  type: min
  name: all_temps_min
  entity_ids:
    - sensor.bed1_temperature
    - sensor.seb_temperature
    - sensor.reu_d1_temperature
    - sensor.bathroom_temperature
    - sensor.ensuite_temperature
    - sensor.living_room_temp
- platform: min_max
  type: max
  name: all_temps_max
  entity_ids:
    - sensor.bed1_temperature
    - sensor.seb_temperature
    - sensor.reu_d1_temperature
    - sensor.bathroom_temperature
    - sensor.ensuite_temperature
    - sensor.living_room_temp
- platform: statistics
  state_characteristic: mean
  name: temps_min_stats
  entity_id: sensor.all_temps_min
  sampling_size: 1000
  max_age:
    hours: 24
- platform: statistics
  state_characteristic: mean
  name: temps_max_stats
  entity_id: sensor.all_temps_max
  sampling_size: 1000
  max_age:
    hours: 24
- platform: statistics
  state_characteristic: mean
  sampling_size: 2000
  max_age:
    hours: 24
  name: pm2_5_max
  entity_id: sensor.air_quality_pm2_5
- platform: mqtt_room
  name: "Toms Phone BLE"
  device_id: "iBeacon:add4883f-65b3-4004-b3dc-3e73d12100ec-100-1"
  state_topic: "espresense/rooms"
  timeout: 5
  away_timeout: 150
- platform: mqtt_room
  name: "Annas MiBand"
  device_id: "mifit:c0125c9784a2"
  state_topic: "espresense/rooms"
  timeout: 5
  away_timeout: 150
- platform: mqtt_room
  name: "Reubens MiBand"
  device_id: "mifit:ca53200f684b"
  state_topic: "espresense/rooms"
  timeout: 5
  away_timeout: 150
- platform: mqtt_room
  name: "Sebs MiBand"
  device_id: "mifit:ca53200f684b"
  state_topic: "espresense/rooms"
  timeout: 5
  away_timeout: 150
### Solax Local REST sensor ###
- platform: rest
  scan_interval: 60
  resource: !secret solax_local_ip
  payload: !secret solax_local_realtime_payload
  method: POST
  name: "solax_rest_local"
  json_attributes:
        - sn
        - ver
        - type
        - Data
        - Information
  value_template: 'OK'  # dummy value, not used; avoids the "State max length is 255 characters" error

### Solax Local REST settings ###
- platform: rest
  scan_interval: 21600
  resource: !secret solax_local_ip
  payload: !secret solax_local_settings_payload
  method: POST
  name: "solax_rest_local_settings"
  # Unfortunately settings are not returned as a JSON document but an array of numbers, so having to pick just the relevant to avoid the max 255 chars limit
  # 0 - Self Use Min SOC %
  # 1 - Self Use Charge from grid (0 for disabled, 1 for enabled)
  # 2 - Self Use Charge from grid to % 
  value_template: "{{ '[' ~ value.split(',')[28] ~ ',' ~ value.split(',')[29] ~ ',' ~ value.split(',')[30] ~ ']' }}"
  
- platform: history_stats
  name: airer_run_time
  entity_id: switch.heated_airer
  state: "on"
  type: time
  start: "{{ as_datetime(states('sensor.airer_requested_power')) }}"
  end: "{{ now() }}"
  
- platform: history_stats
  name: airer_total_daily_run_time
  entity_id: switch.heated_airer
  state: "on"
  type: time
  start: "{{ now().replace(hour=0, minute=0, second=0, microsecond=0) }}"
  duration:
    hours: 24 
    
- platform: history_stats
  name: immersion_run_time
  entity_id: switch.immersion_heater
  state: "on"
  type: time
  start: "{{ now().replace(hour=0, minute=0, second=0, microsecond=0) }}"
  duration:
    hours: 24
    