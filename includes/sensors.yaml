- platform: template
  sensors:
    vacuum_state:
      value_template: 'Ditto: {{ states.vacuum.ditto.attributes.status }}'
    vacuum_last_run:
      value_template: '{{ as_timestamp(states.vacuum.ditto.attributes.clean_start) | timestamp_custom("%d.%m.%Y") }}'
    vacuum_last_qm:
      value_template: '{{ states.vacuum.ditto.attributes.clean_area | round(0) }} mÂ²'
    vacuum_battery:
      value_template: '{{ states.vacuum.ditto.attributes.battery_level }} %'
      icon_template: '{{ states.vacuum.ditto.attributes.battery_icon }}'
- platform: time_date
  display_options:
    - 'time'
    - 'date'
- platform: synologydsm
  host: 192.168.1.205
  username: hassio
  password: !secret synology
  monitored_conditions:
    - cpu_total_load
    - memory_real_usage
    - network_up
    - volume_percentage_used
- platform: template
  sensors:
    hallway_motion_sensor_temperature_rounded:
      friendly_name: 'Hall Temp'
      value_template: '{{states.sensor.hallway_motion_sensor_temperature.state |round(0)}}'
- platform: template
  sensors:
    white_temperature_rounded:
      friendly_name: 'Kitchen Temp'
      value_template: '{{states.sensor.white_temperature.state |round(0)}}'
- platform: template
  sensors:
    bed1_temperature_rounded:
      friendly_name: 'Bed1 Temp'
      value_template: '{{states.sensor.bed1_temperature.state |round(0)}}'
- platform: template
  sensors:
    seb_temperature_rounded:
      friendly_name: 'Seb Temp'
      value_template: '{{states.sensor.seb_temperature.state |round(0)}}'
- platform: template
  sensors:
    reuben_temperature_rounded:
      friendly_name: 'Reuben Temp'
      value_template: '{{states.sensor.reu_temperature.state |round(0)}}'
- platform: template
  sensors:
    bathroom_temperature_rounded:
      friendly_name: 'Bathroom Temp'
      value_template: '{{states.sensor.bathroom_temperature.state |round(0)}}'
- platform: template
  sensors:
    ensuite_temperature_rounded:
      friendly_name: 'Ensuite Temp'
      value_template: '{{states.sensor.ensuite_temperature.state |round(0)}}'
- platform: feedparser
  scan_interval: 43200
  name: QOTD
  feed_url: http://feeds.feedburner.com/theysaidso/qod/inspire
- platform: feedparser
  name: BeautifulNews
  feed_url: http://feeds.feedburner.com/beautifulnewsdaily
  scan_interval: 43200
  show_topn: 1  
- platform: feedparser
  name: BBC News
  feed_url: http://feeds.bbci.co.uk/news/rss.xml
  show_topn: 5
- platform: google_travel_time
  name: 'Shipley to Leeds'
  api_key: !secret gcloud_api_key
  origin: Shipley, UK
  destination: Leeds, UK
  scan_interval: 3600
  options:
    mode: transit
    transit_mode: train
- platform: uk_transport
  scan_interval: 86400
  app_id: !secret uk_transport-app_id
  app_key: !secret uk_transport-app_key
  queries:
    - mode: train
      origin: SHY
      destination: LDS    
- platform: uk_transport
  scan_interval: 86400
  app_id: !secret uk_transport-app_id
  app_key: !secret uk_transport-app_key
  queries:
    - mode: train
      origin: LDS
      destination: SHY   
- platform: rest
  resource: https://complimentr.com/api
  method: GET
  name: compliment
  scan_interval: 3600
  value_template: '{{ value_json.compliment }}'
- platform: history_stats
  name: Quarantine meter Tom
  entity_id: person.tom
  state: "home"
  type: ratio
  duration:
    days: 7
  end: "{{ now() }}"
- platform: history_stats
  name: Quarantine meter Tom count left
  entity_id: person.tom
  state: "home"
  type: count
  duration:
    days: 7
  end: "{{ now() }}"
- platform: history_stats
  name: Washing Machine Count
  entity_id: binary_sensor.washer
  state: "on"
  type: count
  duration:
    days: 7
  end: "{{ now() }}"
